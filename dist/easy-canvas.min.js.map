{"version":3,"file":"easy-canvas.min.js","sources":["../lib/constants.js","../lib/utils.js","../lib/line.js","../lib/flex-box.js","../lib/tree-node.js","../lib/complete-styles.js","../lib/element.js","../lib/view.js","../lib/text.js","../lib/image.js","../lib/event-manager.js","../lib/canvas-render.js","../lib/weapp-adapter.js","../lib/layer.js","../lib/scroll-view.js","../lib/create-element.js","../lib/index.js"],"sourcesContent":["const DISPLAY = {\n  BLOCK: 'block',\n  INLINE_BLOCK: 'inline-block',\n  INLINE: 'inline', // 用户不能设置inline，text默认为inline\n  FLEX: 'flex',\n  NONE: 'none'\n}\n\nconst WIDTH = {\n  AUTO: 'auto',\n  OUTER: '100%'\n}\n\nconst POSITION = {\n  ABSOLUTE: 'absolute',\n  FIXED: 'fixed',\n  RELATIVE: 'relative',\n  STATIC: 'static'\n}\n\nconst TEXT_ALIGN = {\n  LEFT: 'left',\n  RIGHT: 'right',\n  CENTER: 'center'\n}\n\nconst FLEX_DIRECTION = {\n  ROW: 'row',\n  COLUMN: 'column'\n}\n\nconst DEFAULT_STYLES = {\n  display: DISPLAY.BLOCK,\n  fontSize: 14,\n  fontWeight: 400,\n  fontFamily: \"Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei\",\n  color: '#000',\n  paddingTop: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  paddingRight: 0,\n  marginTop: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  marginRight: 0,\n  height: WIDTH.AUTO,\n  borderRadius: 0,\n  lineCap: 'square',\n  flexDirection: FLEX_DIRECTION.ROW,\n  verticalAlign: 'middle',\n  textAlign: 'left',\n  justifyContent: 'flex-start',\n  alignItems: 'flex-start',\n  whiteSpace: 'normal',\n  zIndex: 1,\n  visible: true,\n  position: 'static'\n}\n\nexport default {\n  DISPLAY,\n  WIDTH,\n  POSITION,\n  DEFAULT_STYLES,\n  TEXT_ALIGN,\n  FLEX_DIRECTION\n}\n","export function isExact(num) {\n  return typeof num === 'number'\n}\n\nexport function isAuto(num) {\n  return num === 'auto'\n}\n\nexport function isOuter(num) {\n  if (typeof num !== 'string') return\n  return num.match('%')\n}\n\nexport function parseOuter(num) {\n  let _n = parseInt(num.replace('%', ''))\n  return (isNaN(_n) || _n < 0) ? 0 : (_n / 100)\n}\n\n\nexport function walk(element, callback) {\n  let _continue = false // 是否跳过当前节点以及后面的节点\n  let _next = false // 是否跳过当前节点数，子元素都不会遍历\n  const _callContinue = () => _continue = true\n  const _callNext = () => _next = true\n  if (element != null) {\n    var stack = [];\n    stack.push(element);\n    while (stack.length != 0) {\n      var item = stack.pop();\n      callback(item, _callContinue, _callNext)\n      if (!_next) {\n        var children = item._getChildren();\n        for (var i = children.length - 1; i >= 0; i--) {\n          if (!_continue) {\n            stack.push(children[i]);\n          } else {\n            // 复位\n            _continue = false\n          }\n\n        }\n\n      } else {\n        // 复位\n        _next = false\n      }\n    }\n  }\n}\n\nexport function walkParent(element, callback) {\n  if (!element) return\n  let cur = element\n  let stop = false\n  const callbreak = () => {\n    stop = true\n  }\n  while (cur.parent) {\n    callback(cur.parent, callbreak)\n    if (stop) {\n      break\n    }\n    cur = cur.parent\n  }\n}\n\nexport function findRelativeTo(element) {\n  if (element.isInFlow()) return element.parent\n  if (element.renderStyles.position === 'fixed') return element.root\n  let relativeTo = null\n  walkParent(element, (parent) => {\n    if (parent.renderStyles.position !== 'static' && !relativeTo) {\n      relativeTo = parent\n    }\n  })\n  if (!relativeTo) {\n    relativeTo = element.root\n  }\n  return relativeTo\n}\n\n\n//\nvar pow = Math.pow,\n  sqrt = Math.sqrt,\n  sin = Math.sin,\n  cos = Math.cos,\n  PI = Math.PI,\n  c1 = 1.70158,\n  c2 = c1 * 1.525,\n  c3 = c1 + 1,\n  c4 = (2 * PI) / 3,\n  c5 = (2 * PI) / 4.5;\n\nexport function easeInOutElastic(x) {\n  return x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ?\n    -(pow(2, 20 * x - 10) * sin((20 * x - 11.125) * c5)) / 2 :\n    pow(2, -20 * x + 10) * sin((20 * x - 11.125) * c5) / 2 + 1;\n}\n\nfunction easeInOutExpo(pos) {\n  if (pos === 0) return 0;\n  if (pos === 1) return 1;\n  if ((pos /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (pos - 1));\n  return 0.5 * (-Math.pow(2, -10 * --pos) + 2);\n}\n\n\nexport function isWX() {\n  return !window\n}\n\nexport function isEndNode(el) {\n  return el.parent && !el.next && !el.hasChildren()\n}\n\nexport function breadthFirstSearch(node) {\n\n  var nodes = [];\n\n  if (node != null) {\n\n    var queue = [];\n\n    queue.unshift(node);\n\n    while (queue.length != 0) {\n\n      var item = queue.shift();\n\n      nodes.push(item._generateRender());\n\n      var children = item._getChildren();\n\n      for (var i = 0; i < children.length; i++)\n        queue.push(children[i]._generateRender());\n\n    }\n\n  }\n\n  return nodes;\n\n}\n\nexport function breadthFirstSearchRight(node) {\n\n  var nodes = [];\n\n  if (node != null) {\n\n    var queue = [];\n\n    queue.unshift(node);\n\n    while (queue.length != 0) {\n\n      var item = queue.shift();\n\n      nodes.push(item._generateRender());\n\n      var children = item._getChildren();\n\n      for (var i = children.length - 1; i >= 0; i--)\n        queue.push(children[i]._generateRender());\n\n    }\n\n  }\n\n  return nodes.reverse();\n\n}\n\nexport function needReflow(style) {\n  return ['width',\n    'height',\n    'position',\n    'display',\n    'padding',\n    'paddingTop',\n    'paddingLeft',\n    'paddingBottom',\n    'paddingRight',\n    'margin',\n    'marginLeft',\n    'marginTop',\n    'marginBottom',\n    'marginRight',\n    'borderWidth',\n    'flexDirection',\n    'justifyContent',\n    'alignItems',\n    'textAlign',\n    'left',\n    'top',\n    'right',\n    'bottom'\n  ].includes(style)\n}\n\nconst mergeKeys = ['attrs', 'styles', 'on']\nexport function mergeOptions(options, mergeOptions) {\n  let mergedOptions = {}\n  mergeKeys.forEach(key => {\n    if (!options[key]) options[key] = {}\n    if (!mergeOptions[key]) mergeOptions[key] = {}\n    mergedOptions[key] = Object.assign({}, options[key], mergedOptions[key])\n  })\n  return mergedOptions\n}\n\n\nexport function floor(val){\n  return (0.5 + val) << 0\n}\n\nexport function qSort3(arr,callback) {       //三路快排\n  if(arr.length == 0) {\n    return [];\n  }\n  var left = [];\n  var center = [];\n  var right = [];\n  var pivot = arr[0];    //偷懒，直接取第一个,实际取值情况 参考[快速排序算法的优化思路总结]\n  let val = 0\n  for(var i = 0; i < arr.length; i++) {\n    val = callback(arr[i],pivot)\n    if(val<0) {\n      left.push(arr[i]);\n    } else if(val === 0) {\n      center.push(arr[i]);\n    } else {\n      right.push(arr[i]);\n    }\n  }\n  return [...qSort3(left,callback), ...center, ...qSort3(right,callback)];\n}\n\nexport function getThrottle(threshold) {\n    let timer;\n    return function (fn) {\n        if (!timer) {\n            timer = setTimeout(function () {\n                fn();\n                timer = null;\n            }, threshold)\n        }\n    }\n}\n","import { isExact, isAuto } from './utils'\n\nexport default class Line {\n  constructor() {\n    this.width = 0\n    this.height = 0\n    this.contentWidth = 0 // 右边界\n    this.y = 0 // 上\n    this.doorClosed = false // 是否允许加入\n    this.outerWidth = 0\n    this.container = null\n    this.elements = []\n    this.start = null // 起点，行最左边第一个\n    this.end = null // 结束\n    this.offsetX = 0\n    this.id = Math.random()\n  }\n\n  bind(el) {\n    this.container = el.parent\n    this.initHeight(el)\n    this.outerWidth = el.parent && isAuto(el.parent.styles.width) ? Infinity : el.parent.renderStyles.contentWidth\n\n    this.start = el\n    this.add(el)\n  }\n\n  initHeight(el) {\n    this.height = el.parent && el.parent.renderStyles.lineHeight || 0\n  }\n\n  initLayout(el) {\n    this.right = el._getContainerLayout().contentX\n    this.x = el._getContainerLayout().contentX\n    this.y = this.getPreLine(el).y\n  }\n\n  refreshElementPosition(el) {\n    if (this.start === el) {\n      this.initLayout(el)\n    }\n    // 刷新位置，首先以左边计算\n    el.x = this.right + this.offsetX\n    el.y = this.y + this.getOffsetY(el)\n    // + (this.height - el.renderStyles.height) / 2\n    this.right += el.renderStyles.width\n\n  }\n\n  getOffsetY(el) {\n    if (el.renderStyles.verticalAlign === 'bottom') {\n      return (this.height - el.renderStyles.height)\n    } else if (el.renderStyles.verticalAlign === 'middle') {\n      return (this.height - el.renderStyles.height) / 2\n    } else {\n      return 0\n    }\n  }\n\n\n  add(el) {\n    this.elements.push(el)\n    el.line = this\n    this.refreshWidthHeight(el)\n\n    if (!el.next || el.next.renderStyles.display !== 'inline-block') {\n      this.closeLine()\n    }\n  }\n\n  refreshWidthHeight(el) {\n    if (el.renderStyles.height > this.height) {\n      this.height = el.renderStyles.height\n    }\n\n    this.width += el.renderStyles.width\n  }\n\n  canIEnter(el) {\n    if ((el.renderStyles.width + this.width) > this.outerWidth) {\n      this.closeLine()\n      return false\n    } else {\n      return true\n    }\n  }\n\n  closeLine() {\n    // new line\n    this.end = this.elements[this.elements.length - 1]\n    this.refreshXAlign()\n\n  }\n\n  getPreLine(el) {\n    if (el.pre) {\n      if (el.pre.line) {\n        return { y: el.pre.line.height + el.pre.line.y, x: el.pre.line.x }\n      } else {\n        return { y: el._getPreLayout().y + el._getPreLayout().height, x: el._getPreLayout().x }\n      }\n    } else {\n      return { y: el._getContainerLayout().contentY, x: el._getContainerLayout().contentX }\n    }\n  }\n\n  refreshXAlign() {\n    if (this.outerWidth > 5000) return\n    if (!this.end.parent) return\n    let offsetX = this.outerWidth - this.width\n    if (this.end.parent.renderStyles.textAlign === 'center') {\n      offsetX = offsetX / 2\n    } else if (this.end.parent.renderStyles.textAlign === 'left') {\n      offsetX = 0\n    }\n    this.offsetX = offsetX\n  }\n}\n","import Line from './line'\nimport { isExact, isAuto } from './utils'\nimport STYLES from './constants'\n\nconst KEY = {\n  [STYLES.FLEX_DIRECTION.ROW]: {\n    width: 'width',\n    contentWidth: 'contentWidth',\n    x: 'x',\n    y: 'y',\n    contentX: 'contentX',\n    height: 'height',\n    contentHeight: 'contentHeight'\n  },\n  [STYLES.FLEX_DIRECTION.COLUMN]: {\n    width: 'height',\n    contentWidth: 'contentHeight',\n    x: 'y',\n    y: 'x',\n    contentX: 'contentY',\n    height: 'width',\n    contentHeight: 'contentWidth'\n  }\n}\n// 目前flex是基于inline-block的简单实现，只支持row方向width + flex混用\nexport default class FlexBox extends Line {\n  constructor() {\n    super()\n    this.exactValue = 0\n    this.flexTotal = 0\n    this.key = null\n  }\n\n  closeLine() {\n    super.closeLine()\n    this.calcFlex()\n  }\n\n  bind(el) {\n    this.container = el.parent\n    if (el.parent) {\n      this.key = KEY[el.parent.renderStyles.flexDirection]\n    }\n    this.initHeight(el)\n    this.outerWidth = el.parent && isAuto(el.parent.styles[this.key.width]) ? Infinity : el.parent.renderStyles[this.key.contentWidth]\n    this.start = el\n    this.add(el)\n  }\n\n  add(el) {\n    if (isExact(el.styles[this.key.width])) {\n      this.exactValue += el.styles[this.key.width]\n    }else if (isExact(el.styles.flex)) {\n      this.flexTotal += el.styles.flex\n    }\n\n    this.elements.push(el)\n    el.line = this\n    this.refreshWidthHeight(el)\n\n    if (!el.next) {\n      this.closeLine()\n    }\n  }\n\n  initHeight() {\n    this[this.key.height] = 0\n  }\n\n  refreshWidthHeight(el) {\n    if (el.renderStyles[this.key.height] > this[this.key.height]) {\n      this[this.key.height] = el.renderStyles[this.key.height]\n    }\n\n    this[this.key.width] += el.renderStyles[this.key.width]\n  }\n\n  initLayout(el) {\n    this.right = el._getContainerLayout()[this.key.contentX]\n    this[this.key.x] = el._getContainerLayout()[this.key.contentX]\n    this[this.key.y] = this.getPreLine(el)[this.key.y]\n  }\n\n  refreshElementPosition(el) {\n    if (this.start === el) {\n      this.initLayout(el)\n    }\n    // 刷新位置，首先以左边计算\n    el[this.key.x] = this.right + this.offsetX\n    el[this.key.y] = this[this.key.y] + this.getOffsetY(el)\n    // + (this.height - el.renderStyles.height) / 2\n    this.right += el.renderStyles[this.key.width]\n\n  }\n\n  calcFlex() {\n    const { [this.key.contentWidth]: containerWidth } = this.container.renderStyles\n    this.elements.forEach(child => {\n      if (isExact(child.styles.flex)) {\n        child.renderStyles[this.key.width] = (child.styles.flex / this.flexTotal) * (containerWidth - this.exactValue)\n        child._refreshContentWithLayout()\n      }\n    })\n  }\n\n  refreshXAlign() {\n    if (!this.end.parent) return\n    let offsetX = this.outerWidth - this[this.key.width]\n    if (this.end.parent.renderStyles.justifyContent === 'center') {\n      offsetX = offsetX / 2\n    } else if (this.end.parent.renderStyles.justifyContent === 'flex-start') {\n      offsetX = 0\n    }\n    this.offsetX = offsetX\n  }\n\n  getOffsetY(el) {\n    if (el.renderStyles.alignSelf === 'flex-end') {\n      return (this.container.renderStyles[this.key.contentHeight] - el.renderStyles[this.key.height])\n    } else if (el.renderStyles.alignSelf === 'center') {\n      return (this.container.renderStyles[this.key.contentHeight] - el.renderStyles[this.key.height]) / 2\n    } else {\n      return 0\n    }\n  }\n}\n","export default class TreeNode {\n\n  static connectChildren(el) {\n    if (el.hasChildren()) {\n      el._getChildren().map((child, index) => {\n        // 设置parent\n        child._setParent(el)\n        // 设置了上一个兄弟节点\n        child._setSibling(el._getChildren()[index - 1], el._getChildren()[index + 1])\n        TreeNode.connectChildren(child)\n      })\n    } else {\n    }\n  }\n\n  constructor(children) {\n    this.children = children || []\n    this.parent = null\n    this.root = null\n    this.pre = null\n    this.next = null\n  }\n\n\n\n  hasChildren() {\n    return Array.isArray(this.children) && this.children.length ? true : false\n  }\n\n  _getChildren() {\n    return this.hasChildren() ? this.children : []\n  }\n\n  _setParent(element) {\n    this.parent = element\n    this.root = element.root\n  }\n\n  _setSibling(pre, next) {\n    this.pre = pre || null\n    this.next = next || null\n  }\n\n\n  // 添加在最后\n  appendChild(treeNode) {\n    if (!treeNode instanceof TreeNode) throw Error('Unknown treeNode type')\n    const pre = this._getChildren()[this._getChildren().length - 1]\n    pre && pre._setSibling(pre.pre,treeNode)\n    this.children.push(treeNode)\n    treeNode._setParent(this)\n    treeNode._setSibling(pre, null)\n    // return treeNode\n  }\n\n  //\n  prependChild(treeNode) {\n    if (!treeNode instanceof TreeNode) throw Error('Unknown treeNode type')\n    const next = this._getChildren()[0]\n    next && next._setSibling(treeNode,next.next)\n    this.children.unshift(treeNode)\n    treeNode._setParent(this)\n    treeNode._setSibling(null, next)\n    // return treeNode\n  }\n\n  removeChild(treeNode) {\n    if (!treeNode instanceof TreeNode) throw Error('Unknown treeNode type')\n    const index = this._getChildren().indexOf(treeNode)\n    if (index < 0) throw Error('treeNode must be the child of parent')\n    const pre = this._getChildren()[index - 1]\n    const next = this._getChildren()[index + 1]\n    if (pre) {\n      pre._setSibling(pre.pre, next)\n    }\n    if (next) {\n      next._setSibling(pre, next.next)\n    }\n    this.children.splice(index, 1)\n  }\n\n  remove() {\n    if (!this.parent) {\n      throw Error('Can not remove root node')\n    }\n    this.parent.removeChild(this)\n  }\n\n  append(treeNode) {\n    if (!treeNode instanceof TreeNode) throw Error('Unknown treeNode type')\n    if (!this.parent) throw Error('Can not add treeNode to root level!')\n    let children = []\n    treeNode._setParent(this.parent)\n    this.parent.children.forEach((child, index) => {\n      children.push(child)\n      if (child === this) {\n        treeNode._setSibling(child, this.parent.children[index + 1])\n        children.push(treeNode)\n      }\n    })\n    this.parent.children = children\n  }\n\n  prepend(treeNode) {\n    if (!treeNode instanceof TreeNode) throw Error('Unknown treeNode type')\n    if (!this.parent) throw Error('Can not add treeNode to root level!')\n    let children = []\n    treeNode._setParent(this.parent)\n    for (let i = this.parent.children.length - 1; i >= 0; i--) {\n      children.unshift(this.parent.children[i])\n      if (this.parent.children[i] === this) {\n        treeNode._setSibling(this.parent.children[i - 1], this.parent.children[i])\n        children.unshift(treeNode)\n      }\n    }\n    this.parent.children = children\n  }\n\n\n}\n","import { isExact, isAuto, isOuter } from './utils'\nimport STYLES from './constants'\n\n\nexport default function (element) {\n  _completeFlex(element)\n\n  _completeWidth(element)\n\n  _completeBorder(element)\n\n  _completeFont(element)\n\n  _completePaddingMargin(element)\n}\n\n\nfunction _completePaddingMargin(element) {\n  if (element.styles.padding) {\n    if (isExact(element.styles.padding)) {\n      element.styles.paddingLeft = element.styles.padding\n      element.styles.paddingBottom = element.styles.padding\n      element.styles.paddingRight = element.styles.padding\n      element.styles.paddingTop = element.styles.padding\n    } else if (Array.isArray(element.styles.padding)) {\n      // 支持数组[10,20]相当于padding:10px 20px;\n      if (element.styles.padding.length === 2) {\n        element.styles.paddingLeft = element.styles.paddingRight = element.styles.padding[1]\n        element.styles.paddingBottom = element.styles.paddingTop = element.styles.padding[0]\n      } else if (element.styles.padding.length === 4) {\n        element.styles.paddingLeft = element.styles.padding[3]\n        element.styles.paddingBottom = element.styles.padding[2]\n        element.styles.paddingRight = element.styles.padding[1]\n        element.styles.paddingTop = element.styles.padding[0]\n      }\n    }\n  }\n\n  if (isExact(element.styles.margin)) {\n    element.styles.marginLeft = element.styles.margin\n    element.styles.marginBottom = element.styles.margin\n    element.styles.marginRight = element.styles.margin\n    element.styles.marginTop = element.styles.margin\n  } else if (Array.isArray(element.styles.margin)) {\n    // 支持数组[10,20]相当于padding:10px 20px;\n    if (element.styles.margin.length === 2) {\n      element.styles.marginLeft = element.styles.marginRight = element.styles.margin[1]\n      element.styles.marginBottom = element.styles.marginTop = element.styles.margin[0]\n    } else if (element.styles.margin.length === 4) {\n      element.styles.marginLeft = element.styles.margin[3]\n      element.styles.marginBottom = element.styles.margin[2]\n      element.styles.marginRight = element.styles.margin[1]\n      element.styles.marginTop = element.styles.margin[0]\n    }\n  }\n}\n\n/**\n * borderwidth到各个边\n */\nfunction _completeBorder(element) {\n  let { borderWidth, borderLeftWidth, borderRightWidth, borderBottomWidth, borderTopWidth, borderRadius } = element.styles\n  if (!borderWidth) {\n    element.styles.borderWidth = 0\n    borderWidth = 0\n  }\n  if (Array.isArray(borderWidth)) {\n    element.styles.borderTopWidth = borderWidth[0]\n    element.styles.borderRightWidth = borderWidth[1]\n    element.styles.borderBottomWidth = borderWidth[2]\n    element.styles.borderLeftWidth = borderWidth[3]\n  } else {\n    if (!borderLeftWidth) {\n      element.styles.borderLeftWidth = borderWidth\n    }\n    if (!borderRightWidth) {\n      element.styles.borderRightWidth = borderWidth\n    }\n    if (!borderBottomWidth) {\n      element.styles.borderBottomWidth = borderWidth\n    }\n    if (!borderTopWidth) {\n      element.styles.borderTopWidth = borderWidth\n    }\n  }\n  if (borderRadius) {\n    element.styles.overflow = 'hidden'\n  }\n}\n\nfunction _completeWidth(element) {\n  if (!element.styles.width) {\n    if (element.styles.display === STYLES.DISPLAY.INLINE_BLOCK || element.styles.display === STYLES.DISPLAY.INLINE || !element.isInFlow()) {\n      element.styles.width = STYLES.WIDTH.AUTO\n    } else if (element.styles.display === STYLES.DISPLAY.BLOCK || element.styles.display === STYLES.DISPLAY.FLEX) {\n      element.styles.width = STYLES.WIDTH.OUTER\n    } else {\n      element.styles.width = 0\n    }\n  }\n\n  if (isOuter(element.styles.width)) {\n    if (element.parent && isAuto(element.parent.styles.width)) {\n      element.styles.width = STYLES.WIDTH.AUTO\n    }\n  }\n\n  if (isOuter(element.styles.height)) {\n    if (element.parent && isAuto(element.parent.styles.height)) {\n      element.styles.height = STYLES.WIDTH.AUTO\n    }\n  }\n}\n\nfunction _completeFont(element) {\n  if (element.styles.fontSize && !element.styles.lineHeight) {\n    element.styles.lineHeight = element.styles.fontSize * 1.4\n  }\n}\n\nfunction _completeFlex(element) {\n  if (element.parent && element.parent.styles.display === STYLES.DISPLAY.FLEX) {\n    // flex布局内 width 和flex需要有一个\n    if (!element.styles.flex) {\n      if (!isExact(element.styles.height) && !isExact(element.styles.width)) {\n        element.styles.flex = 1\n      }\n    } else {\n      if (element.parent.styles.flexDirection === 'column' && isExact(element.styles.flex)) {\n        element.styles.height = 0\n      } else if (element.parent.styles.flexDirection === 'row' && isExact(element.styles.flex)) {\n        element.styles.width = 0\n      }\n    }\n\n  }\n}\n","import STYLES from './constants'\nimport pxUtil from './px'\nimport { isExact, walk, isOuter, parseOuter, walkParent, isEndNode, isAuto, findRelativeTo, needReflow,floor } from './utils'\nimport Line from './line'\nimport FlexBox from './flex-box'\nimport TreeNode from './tree-node'\nimport completeStyles from './complete-styles'\n\n/**\n * Element类实现盒模型以及定位，不具备绘制\n * 其他类继承实现\n *\n */\n\n\n\n\nexport default class Element extends TreeNode {\n  constructor(options, children) {\n    super(children)\n    this.options = Object.assign({ attrs: {}, styles: {}, on: {} }, options)\n    this.styles = null\n    this.renderStyles = null\n    this.x = 0\n    this.y = 0\n    this.render = null\n    this.container = null\n    this.visible = true\n  }\n\n  init() {\n    this._initStyles()\n    this.initEvent()\n  }\n\n  initEvent() {\n    if (this.options.on) {\n      Object.keys(this.options.on).forEach(eventName => {\n        if(this.getLayer().eventManager.EVENTS.includes(eventName)){\n          this.getLayer().eventManager.addEventListener(eventName,this.options.on[eventName], this)\n        }\n      })\n    }\n  }\n\n  removeEvent() {\n    this.getLayer().eventManager.removeElement(this)\n  }\n\n  getLayer() {\n    return this.root.layer\n  }\n\n  getRender() {\n    return this.root.layer.render\n  }\n\n  _paint() {\n\n  }\n\n  mount(layer) {\n    layer.mountNode(this)\n  }\n\n  _initStyles() {\n    this.styles = Object.assign({}, this._getDefaultStyles(), this._getParentStyles(this.options.styles), this.options.styles || {})\n\n    this._completeStyles()\n\n    this._initRenderStyles()\n  }\n\n  _initRenderStyles() {\n    const renderStyles = { ...this.styles }\n    const parentWidth = this._getContainerLayout().contentWidth\n    const parentHeight = this._getContainerLayout().contentHeight\n\n    if (isAuto(renderStyles.width)) {\n      renderStyles.width = 0\n    } else if (isOuter(renderStyles.width)) {\n      renderStyles.width = parseOuter(renderStyles.width) * parentWidth\n    }\n\n    if (isAuto(renderStyles.height)) {\n      renderStyles.height = 0\n    } else if (isOuter(renderStyles.height)) {\n      renderStyles.height = parseOuter(renderStyles.height) * parentHeight\n    }\n\n    if (!renderStyles.width) renderStyles.width = 0\n    if (!renderStyles.height) renderStyles.height = 0\n\n    renderStyles.width = floor(renderStyles.width)\n    renderStyles.height = floor(renderStyles.height)\n\n    // 初始化contentWidth\n    renderStyles.contentWidth = renderStyles.width - renderStyles.paddingLeft - renderStyles.paddingRight - renderStyles.marginLeft - renderStyles.marginRight - this._getTotalBorderWidth(renderStyles)\n    renderStyles.contentHeight = renderStyles.height - renderStyles.paddingTop - renderStyles.paddingBottom - renderStyles.marginTop - renderStyles.marginBottom - this._getTotalBorderHeight(renderStyles)\n\n    this.renderStyles = renderStyles\n\n    if (this._InFlexBox()) {\n      this._bindFlexBox()\n    } else if (!this.isInFlow()) {\n      this.relativeTo = findRelativeTo(this)\n    }\n\n\n  }\n\n  /**\n   * 需要继承的styles放在这里\n   */\n  _getParentStyles(curStyles) {\n    let { textAlign, lineHeight, fontSize, color, fontFamily, alignItems, visible = true } = this.parent && this.parent.renderStyles || {}\n    let extendStyles = {}\n    if (textAlign) extendStyles.textAlign = textAlign\n    if (fontSize) extendStyles.fontSize = fontSize\n    if (color) extendStyles.color = color\n    if (fontFamily) extendStyles.fontFamily = fontFamily\n    if (alignItems && !curStyles.alignSelf) extendStyles.alignSelf = alignItems\n    extendStyles.visible = visible\n    return extendStyles\n  }\n\n  _completeStyles() {\n    completeStyles(this)\n  }\n\n  _getDefaultStyles() {\n    return STYLES.DEFAULT_STYLES\n  }\n\n  // 获取文档流中的子节点\n  _getChildrenInFlow() {\n    return this._getChildren().filter(item => item.isInFlow())\n  }\n\n  // 是否在文档流中\n  isInFlow() {\n    const { position, display } = this.styles\n    return position !== STYLES.POSITION.ABSOLUTE && position !== STYLES.POSITION.FIXED\n  }\n\n  isVisible() {\n    return this.renderStyles.visible && this.visible\n  }\n\n  _generateRender() {\n    return this\n  }\n\n  getCtx() {\n    return this.root.layer.ctx\n  }\n\n  /**\n   * 实现文档流 需要知道上一个兄弟节点\n   */\n  _reflow() {\n\n\n  }\n\n  _initWidthHeight() {\n    const { width, height, display, flex, marginLeft, marginRight, marginTop, marginBottom } = this.styles\n    if (isAuto(width) || isAuto(height)) {\n      // 这一步需要遍历，判断一下\n      const layout = this._measureLayout()\n      // 初始化宽度高度\n      if (isAuto(width)) {\n        this.renderStyles.contentWidth = floor(layout.width)\n      }\n\n      if (isAuto(height)) {\n        // 不填就是auto\n        this.renderStyles.contentHeight = floor(layout.height)\n      }\n    }\n\n    this._refreshLayoutWithContent()\n\n    if (this._InFlexBox()) {\n      this.line.refreshWidthHeight(this)\n    } else if (display === STYLES.DISPLAY.INLINE_BLOCK) {\n      // 如果是inline-block  这里仅计算高度\n      this._bindLine()\n    }\n  }\n\n  _initPosition() {\n    let { contentX } = this._getContainerLayout()\n    const { paddingLeft, paddingTop, borderLeftWidth, borderTopWidth, marginLeft, marginTop } = this.renderStyles\n    // 初始化ctx位置\n    if (!this.isInFlow()) {\n      // 不在文档流中\n      let { contentX, contentY, contentWidth, contentHeight } = this._getContainerLayout(this.relativeTo)\n      let { top, bottom, right, left, width, height } = this.renderStyles\n      if (isOuter(top)) top = parseOuter(top) * contentHeight\n      if (isOuter(bottom)) bottom = parseOuter(bottom) * contentHeight\n      if (isOuter(left)) left = parseOuter(left) * contentWidth\n      if (isOuter(right)) right = parseOuter(right) * contentWidth\n      if (isExact(top)) {\n        this.y = contentY + top\n      } else if (isExact(bottom)) {\n        this.y = contentY + contentHeight - bottom - height\n      }\n\n      if (isExact(left)) {\n        this.x = contentX + left\n      } else if (isExact(right)) {\n        this.x = contentX + contentWidth - right - width\n      }\n    } else if (this._InFlexBox()) {\n      this.line.refreshElementPosition(this)\n    } else if (this.renderStyles.display === STYLES.DISPLAY.INLINE_BLOCK) {\n      // inline-block到line里计算\n      // this._bindLine()\n      this.line.refreshElementPosition(this)\n    } else {\n      this.x = contentX\n      this.y = this._getPreLayout().y + this._getPreLayout().height\n    }\n    this.x = floor(this.x)\n    this.y = floor(this.y)\n    this.contentX = this.x + paddingLeft + borderLeftWidth + marginLeft\n    this.contentY = this.y + paddingTop + borderTopWidth + marginTop\n  }\n\n  _InFlexBox() {\n    if (!this.isInFlow()) return false\n    if (!this.parent) return false\n    if (this.parent && this.parent.renderStyles.display === STYLES.DISPLAY.FLEX) return true\n  }\n\n\n  // 父元素根据子元素撑开content后，再计算width\n  _refreshLayoutWithContent() {\n    this.renderStyles.height = floor(this.renderStyles.contentHeight + this.renderStyles.paddingTop + this.renderStyles.paddingBottom + this.renderStyles.marginTop + this.renderStyles.marginBottom + this._getTotalBorderHeight())\n    this.renderStyles.width = floor(this.renderStyles.contentWidth + this.renderStyles.paddingLeft + this.renderStyles.paddingRight + this.renderStyles.marginLeft + this.renderStyles.marginRight + this._getTotalBorderWidth())\n  }\n\n  // 父元素根据子元素撑开content后，再计算width\n  _refreshContentWithLayout() {\n    this.renderStyles.contentHeight = this.renderStyles.height - this.renderStyles.paddingTop - this.renderStyles.paddingBottom - this.renderStyles.marginTop - this.renderStyles.marginBottom - this._getTotalBorderHeight()\n    this.renderStyles.contentWidth = this.renderStyles.width - this.renderStyles.paddingLeft - this.renderStyles.paddingRight - this.renderStyles.marginLeft - this.renderStyles.marginRight - this._getTotalBorderWidth()\n  }\n\n  _getTotalBorderWidth(renderStyles = this.renderStyles) {\n    return renderStyles.borderLeftWidth + renderStyles.borderRightWidth\n  }\n\n  _getTotalBorderHeight(renderStyles = this.renderStyles) {\n    return renderStyles.borderTopWidth + renderStyles.borderBottomWidth\n  }\n\n  _bindLine() {\n    if (this.pre && this.pre.line && this.pre.line.canIEnter(this)) {\n      this.pre.line.add(this)\n    } else {\n      // 新行\n      new Line().bind(this)\n    }\n  }\n\n  _bindFlexBox() {\n    if (this.pre && this.pre.line) {\n      this.pre.line.add(this)\n    } else {\n      // 新行\n      new FlexBox().bind(this)\n    }\n  }\n\n  _getContainerLayout(container = this.parent) {\n    if (!container) {\n      // root\n      if (!this.container) {\n        debugger\n      }\n      container = {\n        renderStyles: {\n          width: this.container.width,\n          height: this.container.height,\n          paddingTop: 0,\n          paddingBottom: 0,\n          paddingLeft: 0,\n          paddingRight: 0,\n          marginLeft: 0,\n          marginRight: 0,\n          marginTop: 0,\n          marginBottom: 0,\n          contentWidth: this.container.width,\n          contentHeight: this.container.height\n        },\n        x: 0,\n        y: 0,\n        contentX: 0,\n        contentY: 0\n      }\n    }\n    return {\n      width: container.renderStyles.width,\n      height: container.renderStyles.height,\n      x: container.x,\n      y: container.y,\n      paddingTop: container.renderStyles.paddingTop,\n      paddingBottom: container.renderStyles.paddingBottom,\n      paddingLeft: container.renderStyles.paddingLeft,\n      paddingRight: container.renderStyles.paddingRight,\n      marginLeft: container.renderStyles.marginLeft,\n      marginRight: container.renderStyles.marginRight,\n      marginTop: container.renderStyles.marginTop,\n      marginBottom: container.renderStyles.marginBottom,\n      contentX: container.contentX,\n      contentY: container.contentY,\n      contentWidth: container.renderStyles.contentWidth,\n      contentHeight: container.renderStyles.contentHeight\n    }\n  }\n\n  // 这里前一个节点必须在文档流中\n  _getPreLayout() {\n    let cur = this.pre\n    while (cur && !cur.isInFlow()) {\n      cur = cur.pre\n    }\n    // 如果没有前一个或者前面的都不在文档流中，获取容器的\n    if (cur) {\n      return {\n        width: cur.renderStyles.width,\n        height: cur.renderStyles.height,\n        x: cur.x,\n        y: cur.y\n      }\n    } else {\n      return {\n        width: 0,\n        height: 0,\n        x: this._getContainerLayout().contentX,\n        y: this._getContainerLayout().contentY\n      }\n    }\n  }\n\n  // 计算自身的高度\n  _measureLayout() {\n    let width = 0 // 需要考虑原本的宽度\n    let height = 0\n    this._getChildrenInFlow().forEach(child => {\n      if (child.line) {\n        if (child.line.start === child) {\n          if (child.line.width > width) {\n            width = child.line.width\n          }\n          height += child.line.height\n        }\n      } else if (child.renderStyles.width > width) {\n        width = child.renderStyles.width\n        height += child.renderStyles.height\n      } else {\n        height += child.renderStyles.height\n      }\n    })\n\n    return { width, height }\n  }\n\n  // 获取元素，只会找该元素子级\n  getElementBy(key, value) {\n    let match = []\n    walk(this, (element) => {\n      if (element.options.attrs[key] === value) {\n        match.push(element)\n      }\n    })\n    return match\n  }\n\n  // 添加在最后\n  appendChild(element) {\n    super.appendChild(element)\n    this.getLayer().onElementAdd(element)\n    return element\n  }\n\n  //\n  prependChild(element) {\n    super.prependChild(element)\n    this.getLayer().onElementAdd(element)\n    return element\n  }\n\n  removeChild(element) {\n    super.removeChild(element)\n    this.getLayer().onElementRemove(element)\n  }\n\n  append(element) {\n    super.append(element)\n    this.getLayer().onElementAdd(element)\n  }\n\n  prepend(element) {\n    super.prepend(element)\n    this.getLayer().onElementAdd(element)\n  }\n\n  setStyles(styles) {\n    let _needReflow = false\n    Object.keys(styles).forEach(key => {\n      if (needReflow(key)) {\n        _needReflow = true\n      } else {\n        this.renderStyles[key] = styles[key]\n      }\n    })\n    if (_needReflow) {\n      Object.keys(styles).forEach(key => {\n        this.options.styles[key] = styles[key]\n      })\n      this.getLayer().reflowElement(this,this)\n      // console.warn('实验性功能')\n    } else {\n      this.getRender().requestRepaint()\n    }\n  }\n\n}\n","import Element from './element'\nimport STYLES from './constants'\nimport { isExact } from './utils'\n\nexport default class View extends Element {\n\n  constructor(options, children) {\n    super(options, children)\n    this.type = 'view'\n  }\n\n  _getDefaultStyles() {\n    return {\n      ...STYLES.DEFAULT_STYLES,\n      display: STYLES.DISPLAY.BLOCK\n    }\n  }\n\n  _paint() {\n    this.getRender()._drawBackground(this)\n    this.getRender()._drawBox(this)\n  }\n\n\n}\n","import Element from './element'\nimport STYLES from './constants'\nimport { isExact, isAuto } from './utils'\n\nexport default class Text extends Element {\n  constructor(options, children) {\n    super(options, children)\n    this._layout = null // layout用来保存计算的自身高度\n    this._lines = []\n    this.children += ''\n    this.type = 'text'\n  }\n\n  _paint() {\n    this.getRender()._drawBackground(this)\n    this.getRender()._drawText(this)\n    this.getRender()._drawBox(this)\n  }\n\n  _getDefaultStyles() {\n    return {\n      ...STYLES.DEFAULT_STYLES,\n      display: STYLES.DISPLAY.INLINE_BLOCK,\n      width: STYLES.WIDTH.AUTO,\n      textAlign: 'left',\n    }\n  }\n\n  _measureLayout() {\n    this._layout = this.getRender().measureText(this, this.children)\n    this._layout.fontHeight = this.renderStyles.fontSize * 0.8\n    this._layout.height = this.renderStyles.lineHeight\n    this._calcLine()\n    return this._layout\n  }\n\n  _getFont() {\n    const { fontSize, fontWeight, fontFamily } = this.renderStyles\n    return `${fontWeight} ${fontSize}px ${fontFamily}`\n  }\n\n  _calcLine() {\n    if (!this.parent || !this.children) return\n    const { width: textWidth, height: textHeight } = this._layout\n    let { contentWidth: parentContentWidth } = this.parent.renderStyles\n    const { width: parentWidth } = this.parent.styles\n    if (!isAuto(this.styles.width)) parentContentWidth = this.renderStyles.width\n    // 如果一行宽度够，或者父级宽度是auto\n    if ((isExact(parentContentWidth) && parentContentWidth >= textWidth) || parentWidth === STYLES.WIDTH.AUTO) {\n      this._lines = [this.children]\n    } else {\n      this._lines = []\n      let lineIndex = 1\n      let lineText = ''\n      let _layout = null\n      for (let i = 0; i < this.children.length; i++) {\n        _layout = this.getRender().measureText(this, lineText + this.children[i])\n        if (_layout.width > parentContentWidth) {\n          if (lineIndex >= this.renderStyles.maxLine) {\n            // 最大行数限制 以及maxline省略号实现\n            lineText = lineText.substring(0, lineText.length - 2) + '...'\n            break\n          }\n          // 超出了\n          this._lines.push(lineText)\n          lineText = ''\n          lineIndex += 1\n\n        }\n\n        lineText += this.children[i]\n      }\n      this._layout.width = parentContentWidth\n      this._lines.push(lineText)\n      // 根据lineheihgt更新height\n      this._layout.height = this._lines.length * this.renderStyles.lineHeight\n    }\n  }\n\n  getInnerText(){\n    return this.children\n  }\n\n  setInnerText(val){\n    if(val === undefined) return\n    if(val === this.children) return\n    this.children = val\n    this.getLayer().reflowElement(this)\n  }\n}\n","import View from './view'\nimport STYLES from './constants'\nimport { isExact, isAuto, isWX } from './utils'\nimport { getImage } from './weapp-adapter'\n\nexport default class $Image extends View {\n\n  constructor(options, children) {\n    super(options, children)\n    this.type = 'image'\n    this._imageInfo = {\n      width: 0,\n      height: 0,\n      sx: 0,\n      sy: 0,\n      swidth: 0,\n      sheight: 0,\n      dx: 0,\n      dy: 0,\n      dwidth: 0,\n      dheight: 0\n    }\n    this.debugColor = 'blue'\n    this._image = null\n    this._layout = null\n  }\n\n  init() {\n    super.init()\n    this._loadImage()\n  }\n\n  _paint() {\n    this.getRender()._drawBackground(this)\n    this.getRender()._drawImage(this)\n    this.getRender()._drawBox(this)\n  }\n\n  _loadImage() {\n    const { mode } = this.options.attrs\n\n    return new Promise((resolve, reject) => {\n      this.getRender().getImageInstance(this.options.attrs.src)\n        .then(({ info, image }) => {\n          this._imageInfo = info\n          this._image = image\n          resolve()\n\n          this._layoutImage()\n\n          if (this.isVisible()) {\n            // if (mode === 'aspectFill' || mode === 'aspectFit') {\n            //   // this.getLayer().onElementChange(this)\n            //   this.getLayer().repaint(this)\n            // } else {\n            // // 重新布局绘制\n              this.getLayer().reflowElement(this)\n            // }\n          }\n\n          // call load callback\n          if (this.options.on && this.options.on.load) {\n            this.options.on.load(this)\n          }\n        })\n        .catch(err => {\n          // call error callback\n          if (this.options.on && this.options.on.error) {\n            this.options.on.error(err)\n          }\n        })\n    })\n  }\n\n  // 计算图片布局\n  _layoutImage() {\n    const { contentWidth, contentHeight } = this.renderStyles\n    const { mode } = this.options.attrs\n    const { width, height } = this.styles\n    const { width: imageW, height: imageH } = this._imageInfo\n    // 根据用户设置判断图片宽高，目前支持widthfix、heightfix、平铺\n    let w = contentWidth\n    let h = contentHeight\n    if (!isAuto(width) && isAuto(height)) {\n      // width fix\n      w = contentWidth\n      h = getHeightByWidth(w, imageW, imageH)\n    } else if (!isAuto(height) && isAuto(width)) {\n      // height fix\n      h = contentHeight\n      w = getWidthByHeight(h, imageW, imageH)\n    } else if (isAuto(width) && isAuto(height)) {\n      // auto\n      w = imageW\n      h = imageH\n    } else if (mode === 'aspectFill') {\n      // 填充\n      if ((w / h) > (imageW / imageH)) {\n        this._imageInfo.swidth = imageW\n        this._imageInfo.sheight = getHeightByWidth(imageW, w, h)\n        this._imageInfo.sx = 0\n        this._imageInfo.sy = (imageH - this._imageInfo.sheight) / 2\n      } else {\n        this._imageInfo.sheight = imageH\n        this._imageInfo.swidth = getWidthByHeight(imageH, contentWidth, contentHeight)\n        this._imageInfo.sy = 0\n        this._imageInfo.sx = (imageW - this._imageInfo.swidth) / 2\n      }\n    } else if (mode === 'aspectFit') {\n      if ((w / h) > (imageW / imageH)) {\n        this._imageInfo.dwidth = getWidthByHeight(contentHeight, imageW, imageH)\n        this._imageInfo.dheight = contentHeight\n        this._imageInfo.dy = this.contentY\n        this._imageInfo.dx = (contentWidth - this._imageInfo.dwidth) / 2 + this.contentX\n      } else {\n        this._imageInfo.dheight = getHeightByWidth(contentWidth, imageW, imageH)\n        this._imageInfo.dwidth = contentWidth\n        this._imageInfo.dx = this.contentX\n        this._imageInfo.dy = (contentHeight - this._imageInfo.dheight) / 2 + this.contentY\n      }\n    } else {\n      w = contentWidth\n      h = contentHeight\n    }\n    this._layout = { width: w, height: h }\n  }\n\n  _measureLayout() {\n    if (this._layout) {\n      return this._layout\n    } else {\n      return {\n        width: this.renderStyles.width,\n        height: this.renderStyles.height\n      }\n    }\n  }\n\n}\n\n\nfunction getWidthByHeight(height, originWidth, originHeight) {\n  return height / originHeight * originWidth\n}\n\nfunction getHeightByWidth(width, originWidth, originHeight) {\n  return width / originWidth * originHeight\n}\n","import TreeNode from './tree-node'\nimport { walkParent, walk } from './utils'\nconst events = ['click','touchstart','touchmove','touchend','mousewheel']\nexport default class EventManager {\n\n  constructor({ simulateClick = true }) {\n    this.EVENTS = events\n    this.clear()\n    this.touchStartEvent = null\n    this.simulateClick = simulateClick // 是否模拟移动端点击事件\n  }\n\n  clear() {\n    events.forEach(eventName => {\n      this[`${eventName}Tree`] = new TreeNode()\n      this[`${eventName}List`] = []\n    })\n  }\n\n  click(x, y) {\n    let event = new Event({ x, y, type: 'click' })\n    this._emit(event)\n  }\n\n  touchstart(x, y) {\n    let event = new Event({ x, y, type: 'touchstart' })\n    this.touchStartEvent = event\n    this._emit(event)\n  }\n\n  touchmove(x, y) {\n    let event = new Event({ x, y, type: 'touchmove' })\n    this._emit(event)\n  }\n\n  touchend(x, y) {\n    let event = new Event({ x, y, type: 'touchend' })\n    this._emit(event)\n    this.checkClick(event)\n  }\n\n  mousewheel(x,y,deltaX,deltaY){\n    let event = new Event({ x, y,deltaX,deltaY, type: 'mousewheel' })\n    this._emit(event)\n  }\n\n  _emit(e) {\n    let tree = this[`${e.type}Tree`]\n    if(!tree) return\n\n    /**\n     * 遍历树，检查是否回调\n     * 如果父级没有被触发，则子级也不需要检查，跳到下个同级节点\n     * 执行capture回调，将on回调添加到stack\n     */\n    let callbackList = []\n    let curArr = tree._getChildren()\n    while (curArr.length) {\n      walkArray(curArr, (node, callBreak, isEnd) => {\n        if (node.element.isVisible() && this.isPointInElement(e.relativeX, e.relativeY, node.element)) {\n          node.runCapture(e)\n          callbackList.unshift(node)\n          // 同级后面节点不需要执行了\n          callBreak()\n          curArr = node._getChildren()\n        } else if (isEnd) {\n          // 到最后一个还是没监测到，结束\n          curArr = []\n        }\n      })\n    }\n\n    /**\n     * 执行on回调，从子到父\n     */\n    for (let i = 0; i < callbackList.length; i++) {\n      if (!e.currentTarget) e.currentTarget = callbackList[i].element\n      callbackList[i].runCallback(e)\n      if (e.cancelBubble) break\n    }\n  }\n\n  // 待优化\n  isPointInElement(x, y, element) {\n    let a1 = x >= element.x\n    let a2 = y >= element.y\n    let a3 = (x <= (element.x + element.renderStyles.width))\n    let a4 = (y <= (element.y + element.renderStyles.height))\n    if (a1 && a2 && a3 && a4) {\n      return true\n    }\n    return false\n  }\n\n\n  removeElement(element) {\n    events.forEach(eventName => {\n      this[`${eventName}List`] = this[`${eventName}List`].filter(item => {\n        if (item.element === element) {\n          item.remove()\n        }\n        return item.element !== element\n      })\n    })\n  }\n\n  addEventListener(type,callback,element,isCapture){\n    const tree = this[`${type}Tree`]\n    const list = this[`${type}List`]\n    if(!tree){\n      console.error('Unknown event name [' + type+']')\n    }\n    this.addCallback(callback,element,tree,list,isCapture)\n  }\n\n  /**\n   * 不在文档流中，提到relativeTo同级\n   * 根据element树的层级关系构建一个监听回调树模型，提高性能\n   * 有新的监听时，查找应该挂载在哪个节点\n   * 如果节点已经存在，复用原节点\n   * @param {Function} callback\n   * @param {Element} element\n   * @param {Callback} tree\n   * @param {Array<Callback>} list\n   * @param {Boolean} isCapture\n   */\n  addCallback(callback, element, tree, list, isCapture) {\n    let parent = null\n    let node = null\n    // 寻找应该挂载的父节点\n    let target = element\n    for (let i = list.length - 1; i >= 0; i--) {\n      // 寻找已存在节点\n      if (element === list[i].element) {\n        // 当前\n        parent = list[i - 1]\n        node = list[i]\n        break\n      }\n      // 寻找应该挂载的父节点 通过对比当前父级最近的父级\n      if (!element.isInFlow()) {\n        target = element.relativeTo.parent\n        if (!target) {\n          break\n        }\n      }\n      walkParent(target, (p, callBreak) => {\n        if (p === list[i].element) {\n          parent = list[i]\n          callBreak()\n        }\n      })\n      if (parent) {\n        break\n      }\n    }\n\n    // 如果不存在同样的元素节点\n    if (!node) {\n      node = new Callback(element, callback)\n    }\n\n    // 添加回调方法\n    if (isCapture) {\n      node.addCapture(callback)\n    } else {\n      node.addCallback(callback)\n    }\n\n    // 挂载节点\n    if (parent) {\n      // 用prepend是因为后来的层级上高于前面的，但是只有在absolute的元素才能感受到\n      parent.prependChild(node)\n    } else {\n      tree.prependChild(node)\n    }\n\n    // 缓存到list\n    list.push(node)\n  }\n\n  // 这里利用touchstart和touchend实现了移动端click事件\n  checkClick(event) {\n    if (this.touchStartEvent && this.simulateClick) {\n      // 判断两点距离\n      let { x: startx, y: starty } = this.touchStartEvent\n      let { x: endx, y: endy } = event\n      let distance = ((endy * endy + endx * endx) - (starty * starty + startx * startx))\n      if (distance < 5 && distance > -5) {\n        this.click(endx, endy)\n      }\n    }\n  }\n}\n\nclass Event {\n  constructor({ x, y, type,deltaX,deltaY }) {\n    this.x = x\n    this.y = y\n    this.relativeX = x // scroll到每一层scrollview会不断变化\n    this.relativeY = y\n    this.type = type\n    this.cancelBubble = false\n    this.currentTarget = null // 第一个element\n\n    if(type === 'mousewheel'){\n      this.deltaX = deltaX\n      this.deltaY = deltaY\n    }\n  }\n\n  // 阻止冒泡\n  stopPropagation() {\n    this.cancelBubble = true\n  }\n}\n\nclass Callback extends TreeNode {\n  constructor(element) {\n    super()\n    this.element = element\n    this.callbackList = []\n    this.captureList = []\n  }\n\n  addCallback(callback) {\n    this.callbackList.push(callback)\n  }\n\n  addCapture(callback) {\n    this.captureList.push(callback)\n  }\n\n  runCallback(params) {\n    this.callbackList.forEach(item => item.call(this.element,params))\n  }\n\n  runCapture(params) {\n    this.captureList.forEach(item => item.call(this.element,params))\n  }\n\n}\n\n\nfunction walkArray(arr, callback) {\n  let _break = false\n  const callBreak = () => _break = true\n  for (let i = 0; i < arr.length; i++) {\n    callback(arr[i], callBreak, i === arr.length - 1 ? true : false)\n    if (_break) {\n      break\n    }\n  }\n}\n","import { isExact, walk, isOuter, parseOuter, walkParent, isEndNode, isAuto, isWX, qSort3, getThrottle, floor } from './utils'\nimport TreeNode from './tree-node'\nimport STYLES from './constants'\nimport { getImage } from './weapp-adapter'\n\nconst angle = Math.PI / 2\n\n/**\n * 封装图形api\n */\nexport default class CanvasRender {\n  constructor(layer) {\n    this.layer = layer\n    this.imageBus = {}\n    this.isAnimate = false\n    this.lastPaintTime = 0\n    this.lastFrameComplete = false\n    this.throttle = getThrottle(16)\n  }\n\n  getCtx() {\n    return this.layer.ctx\n  }\n\n  getLayer() {\n    return this.layer\n  }\n\n  _restore(callback) {\n    this.getCtx().save()\n    callback()\n    this.getCtx().restore()\n  }\n\n  _path(callback) {\n    this.getCtx().beginPath()\n    callback()\n    this.getCtx().closePath()\n  }\n\n  paint(element) {\n    this.getCtx().save()\n\n    element._paint(this.lastPaintTime)\n\n    this.afterPaint(element)\n  }\n\n  afterPaint(element) {\n    // 这里通过this.ctx栈实现了overflow\n    // 第一步判断没有子元素，绘制完成即restore 有子元素需要子元素全部绘制完毕再restore\n    if (!element.hasChildren() || element.type === 'text') {\n      this.getCtx().restore()\n    }\n\n    // 如果到了层级的最后一个 释放父级的stack\n    this._helpParentRestoreCtx(element)\n  }\n\n  _helpParentRestoreCtx(element) {\n    if ((element.isVisible() && !isEndNode(element)) || (!element.isVisible() && element.next)) return\n    this.getCtx().restore()\n    let cur = element.parent\n    while (cur && !cur.next) {\n      // 如果父级也是同级最后一个，再闭合上一个\n      this.getCtx().restore()\n      cur = cur.parent\n    }\n\n\n  }\n\n  topBorder({ x, y, borderRadius, w, h }) {\n    // 左上角开始\n    this.getCtx().moveTo(x, y + borderRadius)\n    borderRadius && this.getCtx().arc(x + borderRadius, y + borderRadius, borderRadius, 2 * angle, 3 * angle)\n    this.getCtx().lineTo(x + w - borderRadius, y)\n  }\n\n  rightBorder({ x, y, borderRadius, w, h }) {\n    // 右上角\n    // this.getCtx().moveTo(x + w - borderRadius, y)\n    borderRadius && this.getCtx().arc(x + w - borderRadius, y + borderRadius, borderRadius, 3 * angle, 4 * angle)\n    this.getCtx().lineTo(x + w, y + h - borderRadius)\n  }\n\n  bottomBorder({ x, y, borderRadius, w, h }) {\n    // 右下角\n    // this.getCtx().moveTo(x + w, y + h - borderRadius)\n    borderRadius && this.getCtx().arc(x + w - borderRadius, y + h - borderRadius, borderRadius, 0, angle)\n    this.getCtx().lineTo(x + borderRadius, y + h)\n  }\n\n  leftBorder({ x, y, borderRadius, w, h }) {\n    // 左下角\n    borderRadius && this.getCtx().arc(x + borderRadius, y + h - borderRadius, borderRadius, angle, angle * 2)\n    this.getCtx().lineTo(x, y + borderRadius)\n  }\n\n  _drawBox(element) {\n    if (!(element.renderStyles.borderColor || element.renderStyles.shadowBlur)) return\n    const { contentWidth, contentHeight, paddingLeft, paddingTop, borderStyle,\n      paddingRight, paddingBottom, shadowBlur, shadowColor, backgroundColor, shadowOffsetX, shadowOffsetY,\n      borderLeftWidth, borderRightWidth, borderTopWidth, borderBottomWidth, borderWidth } = element.renderStyles\n\n    let borderRadius = getBorderRadius(element)\n\n\n    // 这里是计算画border的位置，起点位置是在线条中间，所以要考虑线条宽度\n    let x = element.contentX - element.renderStyles.paddingLeft - borderLeftWidth / 2\n    let y = element.contentY - element.renderStyles.paddingTop - borderTopWidth / 2\n    let w = contentWidth + paddingLeft + paddingRight + (borderLeftWidth + borderRightWidth) / 2\n    let h = contentHeight + paddingTop + paddingBottom + (borderTopWidth + borderBottomWidth) / 2\n\n    this.getCtx().lineCap = element.renderStyles.lineCap\n    this.getCtx().strokeStyle = element.renderStyles.borderColor\n    this.getCtx().lineJoin = 'round'\n\n    // 实现虚线\n    if (borderStyle && borderStyle !== 'solid') {\n      if (Array.isArray(borderStyle)) {\n        this.getCtx().setLineDash(borderStyle)\n      } else {\n        this.getCtx().setLineDash([5, 5])\n      }\n    }\n\n    const stroke = (borderWidth) => {\n      // 有样式则绘制出来\n      this.getCtx().lineWidth = borderWidth\n      this.getCtx().stroke()\n    }\n    this._restore(() => {\n      this._path(() => {\n\n        if (element.renderStyles.borderTopWidth) {\n          this.topBorder({ x, y, borderRadius: borderRadius ? borderRadius + (element.renderStyles.borderTopWidth / 2) : 0, w, h })\n          // 判断borderwidth 如果都是一样宽，只需要最后一次性绘制，提高性能\n          !borderWidth && stroke(element.renderStyles.borderTopWidth)\n        }\n        if (element.renderStyles.borderRightWidth) {\n          this.getCtx().moveTo(x + w - borderRadius - (element.renderStyles.borderTopWidth / 2), y)\n          this.rightBorder({ x, y, borderRadius: borderRadius ? borderRadius + element.renderStyles.borderRightWidth / 2 : 0, w, h })\n          !borderWidth && stroke(element.renderStyles.borderRightWidth)\n        }\n        if (element.renderStyles.borderBottomWidth) {\n          this.getCtx().moveTo(x + w, y + h - borderRadius - (element.renderStyles.borderRightWidth / 2))\n          this.bottomBorder({ x, y, borderRadius: borderRadius ? borderRadius + (element.renderStyles.borderBottomWidth / 2) : 0, w, h })\n          !borderWidth && stroke(element.renderStyles.borderBottomWidth)\n        }\n        if (element.renderStyles.borderLeftWidth) {\n          this.getCtx().moveTo(x + borderRadius + element.renderStyles.borderBottomWidth / 2, y + h)\n          this.leftBorder({ x, y, borderRadius: borderRadius ? borderRadius + (element.renderStyles.borderLeftWidth / 2) : 0, w, h })\n          stroke(element.renderStyles.borderLeftWidth)\n        }\n      })\n    })\n\n  }\n\n  _drawBackground(element) {\n    const { backgroundColor, contentWidth, contentHeight, shadowColor, shadowBlur,\n      paddingLeft, paddingRight, paddingTop, paddingBottom, opacity, shadowOffsetX, shadowOffsetY,\n      borderLeftWidth, borderRightWidth, borderTopWidth, borderBottomWidth } = element.renderStyles\n    const ctx = this.getCtx()\n\n    let borderRadius = getBorderRadius(element)\n\n\n    // 这里是计算画border的位置，起点位置是在线条中间，所以要考虑线条宽度\n    let x = element.contentX - element.renderStyles.paddingLeft - borderLeftWidth\n    let y = element.contentY - element.renderStyles.paddingTop - borderTopWidth\n    let w = contentWidth + paddingLeft + paddingRight + (borderLeftWidth + borderRightWidth)\n    let h = contentHeight + paddingTop + paddingBottom + (borderTopWidth + borderBottomWidth)\n\n    if (isExact(opacity)) {\n      // 绘制透明图\n      ctx.globalAlpha = opacity\n    }\n\n    // 绘制boxshadow\n    // 需要在clip之前\n    if (shadowColor && shadowBlur) {\n      this._restore(() => {\n        this._path(() => {\n          this.topBorder({ x, y, borderRadius, w, h })\n          this.rightBorder({ x, y, borderRadius, w, h })\n          this.bottomBorder({ x, y, borderRadius, w, h })\n          this.leftBorder({ x, y, borderRadius, w, h })\n        })\n        if (isExact(shadowOffsetX)) {\n          this.getCtx().shadowOffsetX = shadowOffsetX\n        }\n        if (isExact(shadowOffsetY)) {\n          this.getCtx().shadowOffsetY = shadowOffsetY\n        }\n        this.getCtx().shadowBlur = shadowBlur\n        this.getCtx().shadowColor = shadowColor\n        this.getCtx().fillStyle = shadowColor\n        this.getCtx().fill()\n      })\n    }\n\n    this._clip(element)\n\n\n\n    // draw background\n    if (backgroundColor) {\n      this.getCtx().fillStyle = this._parseBackground(backgroundColor, element)\n      this.getCtx().fillRect(element.contentX - paddingLeft, element.contentY - paddingTop, contentWidth + paddingLeft + paddingRight, contentHeight + paddingTop + paddingBottom)\n    }\n\n    // for debug\n    if (this.getLayer().options && this.getLayer().options.debug) {\n      this.getCtx().strokeStyle = 'green'\n      this.getCtx().strokeRect(element.contentX, element.contentY, element.renderStyles.contentWidth, element.renderStyles.contentHeight)\n      // ctx.strokeStyle = '#fff'\n      // ctx.strokeText(`${parseInt(this.contentX)} ${parseInt(this.contentY)} ${contentWidth} ${contentHeight}`, this.contentX + 100, this.contentY + 10)\n\n      //\n    }\n  }\n\n  _clip(element) {\n    if (element.renderStyles.overflow !== 'hidden') return\n    const { contentWidth, contentHeight, paddingLeft, paddingTop,\n      paddingRight, paddingBottom, shadowBlur, shadowColor, backgroundColor,\n      borderLeftWidth, borderRightWidth, borderTopWidth, borderBottomWidth } = element.renderStyles\n\n    const angle = Math.PI / 2\n\n    let borderRadius = getBorderRadius(element)\n\n    // 为了把border也切进去\n    let x = element.contentX - element.renderStyles.paddingLeft - borderLeftWidth\n    let y = element.contentY - element.renderStyles.paddingTop - borderTopWidth\n    let w = contentWidth + paddingLeft + paddingRight + borderLeftWidth + borderRightWidth\n    let h = contentHeight + paddingTop + paddingBottom + borderTopWidth + borderBottomWidth\n\n    this._path(() => {\n      this.topBorder({ x, y, borderRadius, w, h })\n      this.rightBorder({ x, y, borderRadius, w, h })\n      this.bottomBorder({ x, y, borderRadius, w, h })\n      this.leftBorder({ x, y, borderRadius, w, h })\n    })\n\n\n    this.getCtx().clip()\n\n  }\n\n  _parseBackground(color, element) {\n    if (Array.isArray(color)) {\n      const gradient = this.getCtx().createLinearGradient(element.contentX, element.contentY, element.renderStyles.contentWidth, element.renderStyles.contentHeight)\n      for (let i = 0; i < color.length; i++) {\n        if (i === 0) {\n          gradient.addColorStop(0, color[0])\n        } else {\n          gradient.addColorStop(i / (color.length - 1), color[i])\n        }\n      }\n      return gradient\n    } else {\n      return color\n    }\n  }\n\n\n  _drawText(element) {\n    const { color, contentWidth, lineHeight, textAlign, textIndent } = element.renderStyles\n    let x = element.contentX\n    this.getCtx().fillStyle = color\n    this.getCtx().textAlign = textAlign\n    this.getCtx().font = element._getFont()\n    if (textAlign === STYLES.TEXT_ALIGN.RIGHT) {\n      x = element.contentX + contentWidth\n    } else if (textAlign === STYLES.TEXT_ALIGN.CENTER) {\n      x = element.contentX + (contentWidth / 2)\n    }\n    let _x = x\n    element._lines.forEach((line, index) => {\n      if (index === 0 && textIndent) {\n        // 第一行实现textIndent\n        _x = x + textIndent\n      } else {\n        _x = x\n      }\n      this.getCtx().fillText(line, _x, (element.contentY + ((lineHeight + element._layout.fontHeight) / 2) + lineHeight * index))\n    })\n  }\n\n  /**\n   * @param {String} text\n   * @return {Object<width,height>}\n   */\n  measureText(element, text) {\n    let w = 0\n    this._restore(() => {\n      this.getCtx().font = element._getFont()\n      const { width } = this.getCtx().measureText(text)\n      w = width\n    })\n    return {\n      width: w\n    }\n  }\n\n  _drawImage(element) {\n    if (!element._image) return\n    const { contentWidth, contentHeight } = element.renderStyles\n    const { mode } = element.options.attrs\n    const { sx, sy, swidth, sheight, dx, dy, dwidth, dheight, width: imageW, height: imageH } = element._imageInfo\n    if (mode === 'aspectFill') {\n      this.getCtx().drawImage(element._image, sx, sy, swidth, sheight, element.contentX, element.contentY, contentWidth, contentHeight)\n    } else if (mode === 'aspectFit') {\n      this.getCtx().drawImage(element._image, 0, 0, imageW, imageH, dx, dy, dwidth, dheight)\n    } else {\n      this.getCtx().drawImage(element._image, element.contentX, element.contentY, contentWidth, contentHeight)\n    }\n  }\n\n  _drawScroll(element) {\n    this.getCtx().translate(element.currentScrollX, element.currentScrollY)\n  }\n\n  /**\n   * 这里应该保证onload src等接口\n   */\n  getImageInstance(src) {\n    let image = null\n\n    // 同样的路径返回缓存\n    if (this.imageBus[src]) {\n      image = this.imageBus[src]\n    } else {\n\n      if (isWX()) {\n        image = getImage(src)\n      } else {\n        image = new Image()\n      }\n\n      if (src) {\n        this.imageBus[src] = new Promise((resolve, reject) => {\n          image.onload = function (e) {\n            resolve({\n              image: isWX() ? e.image : image,\n              info: {\n                width: e.target.width,\n                height: e.target.height\n              }\n            })\n          }\n        })\n      }\n\n      image.src = src\n    }\n    return this.imageBus[src]\n  }\n\n  render(node) {\n    this.lastFrameComplete = false\n    this.lastPaintTime = Date.now()\n    if (!node.parent) {\n      // root\n      this.getCtx().clearRect(0, 0, this.getLayer().options.width, this.getLayer().options.height)\n    } else {\n      this.getCtx().clearRect(node.x, node.y, node.renderStyles.width, node.renderStyles.height)\n    }\n    let element = null\n    walk(node, (renderNode, callContinue, callNext) => {\n      if (renderNode.isVisible()) {\n        // 可见的才渲染\n        this.paint(renderNode)\n      } else {\n        // 跳过整个子节点\n        callNext()\n        this._helpParentRestoreCtx(renderNode)\n      }\n    })\n    if (isWX()) {\n      // 兼容小程序\n      this.getCtx().draw && this.getCtx().draw()\n    }\n\n    this.lastFrameComplete = true\n\n  }\n\n  renderFPS() {\n\n  }\n\n  readyToRender(element) {\n\n    // this.element = generateRenderTree(element)\n    this.element = element\n\n    const options = this.getLayer().options\n\n    this.lastPaintTime = Date.now()\n\n    if (options && options.animate) {\n      this.animate()\n    } else {\n      this.render(this.element)\n    }\n\n  }\n\n  requestRepaint(element) {\n    if (this.isAnimate) return\n    // 如果已经有frame在排队等待了 忽略\n    // if(!this.lastFrameComplete) return\n    // let nextFrameTime = Date.now() - this.lastPaintTime\n    // if(nextFrameTime < 16){\n    //   setTimeout(() => this.render(this.element),nextFrameTime)\n    // }else{\n    this.render(this.element)\n    // }\n\n  }\n\n  //\n  getCanvas() {\n    const options = this.getLayer().options\n    return options && options.canvas\n  }\n\n  _animate(preTime) {\n    const now = Date.now()\n    this.render(this.element)\n    if (!this.isAnimate) return\n    window.requestAnimationFrame(() => this._animate(now))\n  }\n\n  /**\n   * 不建议使用了\n   */\n  animate() {\n    this.isAnimate = true\n    window.requestAnimationFrame(() => this._animate())\n  }\n\n  stopAnimate() {\n    this.isAnimate = false\n  }\n\n  // 所有副作用完成\n  // 图片加载异步请求\n  onEffectFinished() {\n    const list = Object.keys(this.imageBus).map(key => {\n      return this.imageBus[key]\n    })\n    return Promise.all(list)\n  }\n\n\n\n}\n\nfunction getBorderRadius(element) {\n  const { contentWidth, contentHeight } = element.renderStyles\n  let { borderRadius } = element.renderStyles\n  if (borderRadius * 2 > contentWidth) {\n    // 如果大于一半，则角不是90度，统一限制最大为一半\n    borderRadius = contentWidth / 2\n  }\n  if (borderRadius * 2 > contentHeight) {\n    borderRadius = contentHeight / 2\n  }\n  if (borderRadius < 0) borderRadius = 0\n  return floor(borderRadius)\n}\n\n// function generateRenderTree(element){\n//   const _root = new RenderNode(element)\n//   let preZ = 0\n//   let pivotZ = 0\n//   let cur = null\n//   let stack = [_root]\n//   while(stack.length){\n//     cur = stack.pop()\n//     if(cur.element.hasChildren()){\n//       cur.children = cur.element._getChildren().map(item => new RenderNode(item))\n//       // sort by zIndex\n//       cur.children = qSort3(cur.children,(pre,pivot) => {\n//         preZ = pre.element.renderStyles.zIndex || 0\n//         pivotZ = pivot.element.renderStyles.zIndex || 0\n//         return preZ - pivotZ\n//       })\n//       Array.prototype.push.apply(stack,cur.children)\n//     }\n//   }\n//   TreeNode.connectChildren(_root)\n//   return _root\n// }\n\n// class RenderNode extends TreeNode {\n//   constructor(element){\n//     super()\n//     this.element = element\n//   }\n// }\n","import { isWX } from \"./utils\"\n\n// 只支持小程序最新的支持同层渲染的canvas api,\n// 不用了\nexport function getImage(url) {\n  const instance = {onload: () => {}}\n  new Promise((resolve, reject) => {\n    wx.downloadFile({\n      url:url,\n      success(res) {\n        wx.getImageInfo({\n          src: res.tempFilePath,\n          success(res1) {\n            resolve({\n              target: {\n                width: res1.width,\n                height: res1.height\n              },\n              image: res.tempFilePath\n            })\n          }\n        })\n      },\n      fail(err) {\n        reject(err)\n      }\n    })\n  })\n  .then((res) => {\n    instance.onload(res)\n  })\n  .catch(err => {\n\n  })\n  return instance\n}\n\n","import EventManager from './event-manager'\nimport { walk, breadthFirstSearch, breadthFirstSearchRight, walkParent, isWX } from './utils'\nimport TreeNode from './tree-node'\nimport CanvasRender from './canvas-render'\nexport default class Layer {\n  constructor(ctx, options) {\n    this.ctx = ctx\n    this.node = null\n    this.isAnimate = false\n    this.nodeList = []\n    this.p2cList = []\n    this.c2pList = []\n    this.renderList = []\n    this.options = options\n    this.eventManager = new EventManager(options)\n    this.render = new CanvasRender(this)\n  }\n\n  update(ctx, options) {\n    this.ctx = ctx\n    this.options = options\n    this.options.renderStyles = options\n    this.node.container = this.options\n  }\n\n  mountNode(node) {\n    this.node = node\n    this.node.root = this.node\n    this.node.layer = this\n    this.node.container = this.options\n    // 事件也清空一下，重新挂载\n    this.eventManager.clear()\n    this.initRender()\n  }\n\n  initRender() {\n    // for 打印耗时\n    const startTime = Date.now()\n\n    TreeNode.connectChildren(this.node)\n    this.initP2CList()\n    this.initC2PList()\n\n    this.flow()\n\n    // flow 完成后监听effect完成\n    this.render.onEffectFinished()\n      .then((res) => this.lifecycle('onEffectSuccess', res))\n      .catch((res) => this.lifecycle('onEffectFail', res))\n      .finally((res) => this.lifecycle('onEffectFinished', res))\n\n    this.repaint()\n\n    console.log(`渲染${this.p2cList.length}个元素 耗时 ${(Date.now() - startTime)} ms`)\n  }\n\n  initP2CList() {\n    // 广度优先\n    this.p2cList = breadthFirstSearch(this.node)\n  }\n\n  initC2PList() {\n    this.c2pList = breadthFirstSearchRight(this.node)\n  }\n\n\n  flow(node = this.node) {\n    for (let i = 0; i < this.p2cList.length; i++) {\n      this.p2cList[i].init()\n    }\n\n    this.reflow()\n  }\n\n  initPaintList() {\n    // 这里实现index\n    this.renderList = this.nodeList\n  }\n\n  reflow(node = this.node) {\n\n    for (let i = 0; i < this.c2pList.length; i++) {\n      this.c2pList[i]._initWidthHeight()\n    }\n\n    for (let i = 0; i < this.p2cList.length; i++) {\n      this.p2cList[i]._initPosition()\n    }\n  }\n\n  reflowElement(element) {\n    // 如果有line，则需要重第一个开始\n    let target = element\n    while (target && target.line) {\n      target = target.parent\n    }\n    const p2cList = breadthFirstSearch(target)\n    for (let i = 0; i < p2cList.length; i++) {\n      p2cList[i]._initStyles()\n    }\n\n    // 所有子元素\n    const children = breadthFirstSearchRight(target)\n    for (let i = 0; i < children.length; i++) {\n      children[i]._initWidthHeight()\n    }\n\n    if (!element.isInFlow()) {\n      for (let i = 0; i < p2cList.length; i++) {\n        p2cList[i]._initPosition()\n      }\n      this.repaint()\n    } else {\n      this.onElementChange(target)\n    }\n\n\n  }\n\n  onElementRemove(element) {\n    this.eventManager.removeElement(element)\n    this.initC2PList()\n    this.initP2CList()\n    this.reflowElement(element)\n  }\n\n  onElementAdd(element) {\n    TreeNode.connectChildren(element)\n    this.initC2PList()\n    this.initP2CList()\n    this.reflowElement(element)\n    breadthFirstSearch(element).forEach(item => item.initEvent())\n  }\n\n  // 元素变化后调用，尽可能少重排重绘\n  onElementChange(element) {\n\n    walkParent(element, (parent, callbreak) => {\n      parent._initWidthHeight()\n      if (parent.type === 'scroll-view') callbreak()\n    })\n\n    for (let i = 0; i < this.p2cList.length; i++) {\n      this.p2cList[i]._initPosition()\n    }\n    this.repaint()\n  }\n\n  callBeforePaint() {\n    for (let i = 0; i < this.p2cList.length; i++) {\n      this.p2cList[i].beforePaint && this.p2cList[i].beforePaint()\n    }\n  }\n\n  /**\n   * 可以给定element，则只会重绘element所在的区域\n   * @param {Element} element\n   */\n  repaint(element = this.node) {\n    if (isWX()) {\n      // 微信环境下始终重绘整个树\n      element = this.node\n    }\n    if (!element.isInFlow()) element = this.node\n\n    this.callBeforePaint()\n\n    this.render.readyToRender(this.node)\n  }\n\n  animate() {\n    console.warn('use [animate] option instead!')\n  }\n\n  getElementBy() {\n    return this.node.getElementBy(...arguments)\n  }\n\n  lifecycle(name, arg) {\n    if (this.options.lifecycle) {\n      this.options.lifecycle[name] && this.options.lifecycle[name](arg)\n    }\n  }\n\n}\n\n\n","import View from './view'\nimport { easeInOutElastic, isExact, isAuto,floor } from './utils'\nimport STYLES from './constants'\n\nexport default class ScrollView extends View {\n\n  constructor(options, children) {\n    const {styles,...rest} = options\n    super(rest, children)\n    this.options.styles = {\n      direction:styles.direction || 'y'\n    }\n    // 外面包裹一层容器，内层的滚动\n    options.styles.overflow = 'hidden'\n    this.type = 'scroll-view'\n    this._scrollView = new View(options, [this])\n    this._scrollView.type = 'scroll-view-container'\n    this.visibleIndex = null\n    this.renderOnDemand = options.attrs && options.attrs.renderOnDemand || false\n    return this._scrollView\n  }\n\n  _getDefaultStyles() {\n    return {\n      ...STYLES.DEFAULT_STYLES,\n      direction: 'y',\n    }\n  }\n\n  beforePaint() {\n    this.initChildrenVisible()\n  }\n\n  _initWidthHeight(){\n    super._initWidthHeight()\n    // 这里需要父级款高度，但是外层必须是exact\n    this.initScroll()\n  }\n\n  _paint() {\n    this.getRender()._drawBackground(this)\n    this.getRender()._drawScroll(this)\n    this.getRender()._drawBox(this)\n  }\n\n  init() {\n    super.init()\n    this.addEventListener()\n    const { height, width} = this._scrollView.styles\n    const { direction } = this.styles\n    if (direction.match('y')) {\n      if (isAuto(height)) {\n        // 必须设置\n        console.error('scroll-view 必须设置明确的高度')\n      } else {\n        this.styles.height = 'auto'\n        this.renderStyles.height = 'auto'\n      }\n    }\n    if (direction.match('x')) {\n      if (isAuto(width)) {\n        // 必须设置\n        console.error('scroll-view 必须设置明确的宽度')\n      } else {\n        this.styles.width = 'auto'\n        this.renderStyles.width = 'auto'\n      }\n    }\n  }\n\n  addEventListener() {\n    // 监听滚动\n    this.currentScrollX = 0\n    this.currentScrollY = 0\n    let direction = this.styles.direction\n    let startX = 0\n    let startY = 0\n    let lastStartX = 0\n    let lastStartY = 0\n    let startMove = false\n    let offsetX = 0\n    let offsetY = 0\n    let speedX = 0\n    let speedY = 0\n    let glideInterval = null\n    let resistanceX = 1\n    let resistanceY = 1\n\n    this.getLayer().eventManager.EVENTS.forEach(eventName => {\n      this.getLayer().eventManager.addEventListener(eventName,(e) => {\n        if (direction.match('y')) {\n          e.relativeY -= this.currentScrollY\n        }\n        if (direction.match('x')) {\n          e.relativeX -= this.currentScrollX\n        }\n      }, this._scrollView, true)\n    })\n\n    this.getLayer().eventManager.addEventListener('mousewheel',(e) => {\n      if (!this.scrollBy(e.deltaX,e.deltaY)) {\n        this.scrollTo({x:e.deltaX<=0?this.maxScrollX:0,y:e.deltaY<=0?this.maxScrollY:0})\n      }else{\n        e.stopPropagation()\n      }\n    },this._scrollView)\n\n    this.getLayer().eventManager.addEventListener('touchstart',(e) => {\n      e.stopPropagation()\n      startX = e.x\n      startY = e.y\n      lastStartX = startX\n      lastStartY = startY\n      startMove = true\n      clearInterval(glideInterval)\n    }, this._scrollView)\n    this.getLayer().eventManager.addEventListener('touchmove',(e) => {\n      if (startMove) {\n        e.stopPropagation()\n        offsetX = (e.x - startX)\n        offsetY = (e.y - startY)\n        if (this.scrollBy(offsetX, offsetY)) {\n          lastStartX = startX\n          lastStartY = startY\n          startX = e.x\n          startY = e.y\n        }\n      }\n    }, this._scrollView)\n    this.getLayer().eventManager.addEventListener('touchend',(e) => {\n      if (startMove) {\n        startMove = false\n\n        speedX = (e.x - lastStartX)\n        speedY = (e.y - lastStartY)\n        resistanceX = -speedX * 0.02\n        resistanceY = -speedY * 0.02\n        clearInterval(glideInterval)\n        glideInterval = setInterval(() => {\n          if (!this.scrollBy(speedX, speedY)) {\n            this.scrollTo(this.currentScrollX + speedX,this.currentScrollY + speedY)\n            clearInterval(glideInterval)\n          }\n          speedX += resistanceX\n          speedY += resistanceY\n          if (speedX * speedX <= 0.05 && speedY * speedY <= 0.05) {\n            speedX = 0\n            speedY = 0\n            clearInterval(glideInterval)\n          }\n        }, 16)\n      }\n    }, this._scrollView)\n  }\n\n  initScroll(){\n    const { contentWidth: offsetWidth, contentHeight: offsetHeight } = this._scrollView.renderStyles\n    const { width: scrollWidth, height: scrollHeight, direction } = this.renderStyles\n    this.maxScrollX = scrollWidth - offsetWidth\n    this.maxScrollY = scrollHeight - offsetHeight\n  }\n\n  calcScrollBoundX(offsetX) {\n      if ((- this.currentScrollX - offsetX) > this.maxScrollX) {\n        return false\n      } else if (this.currentScrollX + offsetX > 0) {\n        return false\n      }\n\n    return true\n  }\n\n  calcScrollBoundY(offsetY) {\n      if ((- this.currentScrollY - offsetY) > this.maxScrollY) {\n        return false\n      } else if (this.currentScrollY + offsetY > 0) {\n        return false\n      }\n\n    return true\n  }\n\n  scrollByX(offsetX) {\n    if (!this.renderStyles.direction.match('x')) return false\n    if (this.calcScrollBoundX(offsetX)) {\n      this.currentScrollX += offsetX\n      return true\n    } else {\n      return false\n    }\n  }\n\n  scrollByY(offsetY) {\n    if (!this.renderStyles.direction.match('y')) return false\n    if (this.calcScrollBoundY(offsetY)) {\n      this.currentScrollY += floor(offsetY)\n      this.calcChildrenVisible()\n      // this.getLayer().repaint(this._scrollView)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  scrollBy(offsetX, offsetY) {\n    // 这里要两个都运行，所以不要用短路\n    if (this.scrollByX(offsetX) | this.scrollByY(offsetY)) {\n      this.getRender().requestRepaint(this._scrollView)\n      return true\n    }\n    return false\n  }\n\n  scrollTo({x,y}) {\n    if(isExact(x) && this.maxScrollX>0){\n      x= x\n      if(x>this.maxScrollX) x = this.maxScrollX\n      this.currentScrollX = -floor(x)\n    }\n    if(isExact(y) && this.maxScrollY>0){\n      y= y\n      if(y>this.maxScrollY) y = this.maxScrollY\n      this.currentScrollY = -floor(y)\n    }\n    this.initChildrenVisible()\n    this.getRender().requestRepaint(this._scrollView)\n  }\n\n  // TODO:\n  initChildrenVisible() {\n    if (!this.renderOnDemand) return\n\n    // console.log('==============')\n    const children = this._getChildrenInFlow()\n    // 左\n    for (let i = 0; i < children.length; i++) {\n      if (this.isElementInViewport(children[i])) {\n        this.visibleIndex = [i, -1]\n        break\n      } else {\n        children[i].visible = false\n      }\n    }\n\n    // 右\n    for (let i = children.length - 1; i >= 0; i--) {\n      if (this.isElementInViewport(children[i])) {\n        this.visibleIndex[1] = i\n        break\n      } else {\n        children[i].visible = false\n      }\n    }\n\n    // 中间\n    for (let i = this.visibleIndex[0]; i <= this.visibleIndex[1]; i++) {\n      children[i].visible = true\n    }\n  }\n\n  // 只用计算两头\n  // 数据量时能显著提高效率\n  // 滚动太快会有问题，暂时使用上面的init\n  calcChildrenVisible() {\n    if (!this.renderOnDemand) return\n    const children = this._getChildrenInFlow()\n    const head = generateSiblingNodeIndex(this.visibleIndex[0], 5)\n    const foot = generateSiblingNodeIndex(this.visibleIndex[1], 5)\n    let visibleIndex = []\n    for (let i = head[0]; i <= head[head.length - 1]; i++) {\n      if (children[i]) {\n        if (this.isElementInViewport(children[i])) {\n          children[i].visible = true\n          if (!visibleIndex.length) {\n            visibleIndex.push(i)\n          }\n        } else {\n          children[i].visible = false\n        }\n      }\n    }\n    for (let i = foot[foot.length - 1]; i >= foot[0]; i--) {\n      if (children[i]) {\n        if (this.isElementInViewport(children[i])) {\n          children[i].visible = true\n          if (visibleIndex.length === 1) {\n            visibleIndex.push(i)\n          }\n        } else {\n          children[i].visible = false\n        }\n      }\n    }\n    this.visibleIndex = visibleIndex\n  }\n\n  isElementInViewport(element) {\n    if (this.styles.direction.match('y')) {\n      return ((element.y + element.renderStyles.height + this.currentScrollY) > this._scrollView.contentY)\n        && ((element.y + this.currentScrollY) < this._scrollView.contentY + this._scrollView.renderStyles.contentHeight)\n    } else {\n      return true\n      // return ((element.x + element.renderStyles.width + this.currentScroll) > this._scrollView.contentX)\n      // && ((element.x + this.currentScroll) < this._scrollView.contentX + this._scrollView.renderStyles.contentWidth)\n    }\n  }\n\n}\n\n\nfunction generateSiblingNodeIndex(index, offset) {\n  let start = index - offset\n  let end = index + offset\n  let list = []\n  for (let i = start; i <= end; i++) {\n    list.push(i)\n  }\n  return list\n}\n","import View from './view'\nimport Text from './text'\nimport Image from './image'\nimport Layer from './layer'\nimport ScrollView from './scroll-view'\n\n/**\n * 生成一个element tree\n * @param {String} name\n * @param {Function} options\n */\n\nconst elementFactory = {}\n//\nregisterComponent('view', (options, children) => new View(options, children))\nregisterComponent('text', (options, children) => new Text(options, children))\nregisterComponent('image', (options, children) => new Image(options, children))\nregisterComponent('scroll-view', (options, children) => new ScrollView(options, children))\nregisterComponent('scrollview', (options, children) => new ScrollView(options, children))\n\nexport function createElement(model) {\n  // 生成树\n  function c(name, options = {}, children = []) {\n    // if (arguments.length < 3) {\n    //   throw Error(`Element [${name}]: need 3 argument but get 2`)\n    // }\n    let _element = null\n    let _children = children\n    if (elementFactory[name]) {\n      // if (typeof children === 'string' && name !== 'text') {\n      //   // 支持text简写\n      //   _children = new Text({}, children)\n      // } else if (!Array.isArray(children)) {\n      //   throw Error(`Element [${name}]:Children must be type of Array!`)\n      // }\n      _element = elementFactory[name](options, _children, c)\n    } else {\n      throw Error(`Unknown tag name [${name}] !`)\n    }\n    return _element\n  }\n  const _model = model(c)\n  // 挂载children\n  return _model\n}\n\nexport function createLayer(ctx, options) {\n  return new Layer(ctx, options)\n}\n\n// 注册全局组件\nexport function registerComponent(name, factory) {\n  if (elementFactory[name]) {\n    throw Error(`Already exist tag name [${name}] !`)\n  }\n  elementFactory[name] = factory\n}\n\n\n\n\n\n","\nimport { createElement, createLayer, registerComponent } from './create-element'\nimport px from './px'\nimport './weapp-adapter'\nimport View from './view'\nimport Text from './text'\nimport Image from './image'\nimport Layer from './layer'\nimport ScrollView from './scroll-view'\nimport { mergeOptions } from './utils'\n\n\nconst ef = {\n  createLayer,\n  createElement,\n  component: registerComponent,\n  View,\n  Text,\n  Image,\n  Layer,\n  ScrollView,\n  mergeOptions\n}\n\n\n\nexport default ef\n\n"],"names":["DISPLAY","BLOCK","INLINE_BLOCK","INLINE","FLEX","NONE","WIDTH","AUTO","OUTER","FLEX_DIRECTION","ROW","COLUMN","POSITION","ABSOLUTE","FIXED","RELATIVE","STATIC","DEFAULT_STYLES","display","fontSize","fontWeight","fontFamily","color","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","marginBottom","marginLeft","marginRight","height","borderRadius","lineCap","flexDirection","verticalAlign","textAlign","justifyContent","alignItems","whiteSpace","zIndex","visible","position","TEXT_ALIGN","LEFT","RIGHT","CENTER","isExact","num","isAuto","isOuter","match","parseOuter","_n","parseInt","replace","isNaN","walk","element","callback","_continue","_next","_callContinue","_callNext","stack","push","length","item","pop","children","_getChildren","i","walkParent","cur","stop","callbreak","parent","isWX","window","breadthFirstSearch","node","nodes","queue","unshift","shift","_generateRender","breadthFirstSearchRight","reverse","mergeKeys","floor","val","Line","[object Object]","this","width","contentWidth","y","doorClosed","outerWidth","container","elements","start","end","offsetX","id","Math","random","el","initHeight","styles","Infinity","renderStyles","add","lineHeight","right","_getContainerLayout","contentX","x","getPreLine","initLayout","getOffsetY","line","refreshWidthHeight","next","closeLine","refreshXAlign","pre","_getPreLayout","contentY","KEY","STYLES","contentHeight","FlexBox","super","exactValue","flexTotal","key","calcFlex","flex","containerWidth","forEach","child","_refreshContentWithLayout","alignSelf","TreeNode","hasChildren","map","index","_setParent","_setSibling","connectChildren","root","Array","isArray","treeNode","Error","indexOf","splice","removeChild","_completeFlex","isInFlow","_completeWidth","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","overflow","_completeBorder","_completeFont","padding","margin","_completePaddingMargin","Element","options","Object","assign","attrs","on","render","_initStyles","initEvent","keys","eventName","getLayer","eventManager","EVENTS","includes","addEventListener","removeElement","layer","mountNode","_getDefaultStyles","_getParentStyles","_completeStyles","_initRenderStyles","parentWidth","parentHeight","_getTotalBorderWidth","_getTotalBorderHeight","_InFlexBox","_bindFlexBox","relativeTo","findRelativeTo","curStyles","extendStyles","completeStyles","filter","ctx","layout","_measureLayout","_refreshLayoutWithContent","_bindLine","refreshElementPosition","top","bottom","left","canIEnter","bind","_getChildrenInFlow","value","appendChild","onElementAdd","prependChild","onElementRemove","append","prepend","_needReflow","reflowElement","getRender","requestRepaint","View","type","_drawBackground","_drawBox","Text","_layout","_lines","_drawText","measureText","fontHeight","_calcLine","textWidth","textHeight","parentContentWidth","lineIndex","lineText","maxLine","substring","undefined","$Image","_imageInfo","sx","sy","swidth","sheight","dx","dy","dwidth","dheight","debugColor","_image","init","_loadImage","_drawImage","mode","Promise","resolve","reject","getImageInstance","src","then","info","image","_layoutImage","isVisible","load","catch","err","error","imageW","imageH","w","h","getHeightByWidth","getWidthByHeight","originWidth","originHeight","events","EventManager","simulateClick","clear","touchStartEvent","event","Event","_emit","checkClick","deltaX","deltaY","e","tree","callbackList","curArr","walkArray","callBreak","isEnd","isPointInElement","relativeX","relativeY","runCapture","currentTarget","runCallback","cancelBubble","a1","a2","a3","a4","remove","isCapture","list","console","addCallback","target","p","Callback","addCapture","startx","starty","endx","endy","distance","click","captureList","params","call","arr","_break","angle","PI","CanvasRender","imageBus","isAnimate","lastPaintTime","lastFrameComplete","throttle","threshold","timer","fn","setTimeout","getThrottle","getCtx","save","restore","beginPath","closePath","_paint","afterPaint","_helpParentRestoreCtx","moveTo","arc","lineTo","borderColor","shadowBlur","borderStyle","shadowColor","backgroundColor","shadowOffsetX","shadowOffsetY","getBorderRadius","strokeStyle","lineJoin","setLineDash","stroke","lineWidth","_restore","_path","topBorder","rightBorder","bottomBorder","leftBorder","opacity","globalAlpha","fillStyle","fill","_clip","_parseBackground","fillRect","debug","strokeRect","clip","gradient","createLinearGradient","addColorStop","textIndent","font","_getFont","_x","fillText","text","drawImage","translate","currentScrollX","currentScrollY","url","instance","onload","wx","downloadFile","res","getImageInfo","tempFilePath","res1","getImage","Image","Date","now","clearRect","renderNode","callContinue","callNext","paint","draw","animate","canvas","preTime","requestAnimationFrame","_animate","all","Layer","nodeList","p2cList","c2pList","renderList","initRender","startTime","initP2CList","initC2PList","flow","onEffectFinished","lifecycle","finally","repaint","log","reflow","_initWidthHeight","_initPosition","onElementChange","beforePaint","callBeforePaint","readyToRender","warn","getElementBy","arguments","name","arg","ScrollView","rest","direction","_scrollView","visibleIndex","renderOnDemand","initChildrenVisible","initScroll","_drawScroll","startX","startY","lastStartX","lastStartY","startMove","offsetY","speedX","speedY","glideInterval","resistanceX","resistanceY","scrollBy","stopPropagation","scrollTo","maxScrollX","maxScrollY","clearInterval","setInterval","offsetWidth","offsetHeight","scrollWidth","scrollHeight","calcScrollBoundX","calcScrollBoundY","calcChildrenVisible","scrollByX","scrollByY","isElementInViewport","head","generateSiblingNodeIndex","foot","offset","elementFactory","registerComponent","factory","createLayer","createElement","model","c","_element","_children","component","mergeOptions","mergedOptions"],"mappings":"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"}